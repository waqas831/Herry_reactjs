{"version":3,"sources":["components/Alert.js","components/Analyse.js","components/Navbar.js","App.js","index.js"],"names":["Alert","props","alert","className","type","role","msg","Analyse","title","mode","useState","MyData","setMyData","total","split","filter","element","length","characters","id","rows","onChange","event","target","value","onClick","console","log","text","toUpperCase","data","toLowerCase","document","getElementById","select","navigator","clipboard","writeText","join","btn","color","margin","fontSize","fontFamily","border","links","Navbar","href","style","toogle","htmlFor","App","setMode","setText","setColor","setAlert","showAlert","message","setInterval","body","backgroundColor","ReactDOM","render"],"mappings":"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","file":"static/js/main.1544b885.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nconst Alert = (props) => {\r\n   \r\n    return (\r\n        \r\n            props.alert &&<div className={`alert alert-${props.alert.type} alert-dismissible fade show`} role=\"alert\">\r\n                <strong>{props.alert.msg}:  </strong>{props.alert.type}\r\n                <button type=\"button\" className=\"btn-close\" data-bs-dismiss=\"alert\" aria-label=\"Close\"></button>\r\n            </div>\r\n        \r\n    )\r\n}\r\n\r\nexport default Alert\r\n","import React, { useState } from 'react'\r\nimport './Allcss.css';\r\nconst Analyse = ({ title,mode,alert }) => {\r\n    const [MyData, setMyData] = useState('')\r\n    const handleInput = (event) => {\r\n        setMyData(event.target.value);\r\n\r\n    }\r\n    let upercase = () => {\r\n        console.log('upercase', MyData);\r\n        let text = MyData.toUpperCase();\r\n        console.log(text, 'hhhhhhhhhhhhh')\r\n        setMyData(text);\r\n        alert(\"converted in uppercase\",\"success\")\r\n        \r\n    }\r\n    const lowercase = () => {\r\n        let data = MyData.toLowerCase();\r\n        setMyData(data);\r\n        console.log(setMyData(data))\r\n        alert(\"converted in LowerCase\",\"success\")\r\n    }\r\n    const clear = () => {\r\n        setMyData('');\r\n    }\r\n    const copy = () => {\r\n        let text = document.getElementById(\"mybox\");\r\n        text.select();\r\n        navigator.clipboard.writeText(text.value);\r\n        alert(\"Text Copied\",\"success\")\r\n    }\r\n    const remove = () => {\r\n        let data = MyData.split(/[ ]+/);\r\n        setMyData(data.join(\" \"));\r\n        alert(\"Spaces Removed\",\"success\")\r\n    }\r\n\r\n    let total = MyData.split(\" \").filter((element)=>{return element.length!==0}).length;\r\n    let characters = MyData.length;\r\n    return (\r\n        <>\r\n        <div className={`container`}>\r\n            <div className=\"container mt-3 \">\r\n                <h2 className=\"heading\">{title}</h2>\r\n                <div className=\"mb-3\">\r\n                    <label className=\"form-label label1\">Example textarea</label>\r\n                    <textarea className=\"form-control\" id=\"mybox\" rows=\"8\"\r\n                        onChange={handleInput} value={MyData}>\r\n                        {MyData}\r\n                    </textarea>\r\n                </div>\r\n                <div className=\"container btns\">\r\n                    <button onClick={upercase}>UpperCase</button>\r\n                    <button onClick={lowercase}>LowerCase</button>\r\n                    <button onClick={clear}>Clear</button>\r\n                    <button onClick={copy}>Copy</button>\r\n                    <button onClick={remove}>Remove Spaces</button>\r\n                </div>\r\n            </div>\r\n            <div className=\"container mt-4\">\r\n                <h2 className=\"heading2\">total words is {total} and total characters is {characters}</h2>\r\n            </div>\r\n            <div className=\"container\">\r\n                <h2 className=\"heading2\">Preview Of TextAnalyser</h2>\r\n                <div className=\"para\">\r\n                    {\r\n                        MyData\r\n                    }\r\n                </div>\r\n            </div>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Analyse\r\n","import React from 'react'\r\nconst btn = {\r\n  color: 'blue',\r\n  margin: '5px',\r\n  fontSize: '23px',\r\n  fontFamily: 'sans-serif',\r\n  border: 'none'\r\n}\r\nconst links = {\r\n  color: 'blue',\r\n  margin: '5px',\r\n  fontSize: '23px',\r\n  fontFamily: 'sans-serif',\r\n}\r\nconst Navbar = (props) => {\r\n  return (\r\n    <div >\r\n      <nav className={`navbar navbar-expand-lg navbar-${props.mode} bg-${props.mode} stylebg`} >\r\n        <div className=\"container\">\r\n          <a className=\"navbar-brand some\" href=\"/\" style={btn}>MySites</a>\r\n          <button className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n            <span className=\"navbar-toggler-icon\"></span>\r\n          </button>\r\n          <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n            <ul className=\"navbar-nav ms-auto mb-2 mb-lg-0\">\r\n              <li className=\"nav-item\">\r\n                <a className=\"nav-link active\" aria-current=\"page\" href=\"/\" style={links}>Home</a>\r\n              </li>\r\n              <li className=\"nav-item\">\r\n                <a className=\"nav-link\" href=\"/\" style={links}>Services</a>\r\n              </li>\r\n              <li className=\"nav-item\">\r\n                <a className=\"nav-link\" href=\"/\" style={links}>About</a>\r\n              </li>\r\n              <li className=\"nav-item\">\r\n                <a className=\"nav-link\" href=\"/\" style={links}>Contact</a>\r\n              </li>\r\n            </ul>\r\n            <form className=\"d-flex\">\r\n              <button className=\"btn btn-outline-success\" type=\"submit\" style={btn}>Signup</button>\r\n              <button className=\"btn btn-outline-success\" type=\"submit\" style={btn}>Login</button>\r\n            </form>\r\n            <div className={`form-check form-switch`}>\r\n              <input className=\"form-check-input\" type=\"checkbox\" id=\"flexSwitchCheckDefault\" onClick={props.toogle} />\r\n              <label className=\"form-check-label\" htmlFor=\"flexSwitchCheckDefault\">{`Enable ${props.text} Mode`}</label>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </nav>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Navbar\r\n","import React,{useState} from 'react';\nimport './App.css';\nimport Alert from './components/Alert';\nimport Analyse from './components/Analyse';\nimport Navbar from './components/Navbar';\n\n\nfunction App() {\n  const [mode,setMode]=useState('light');\n  const [text,setText]=useState('Dark');\n  const [color,setColor]=useState('black');\n  const [alert,setAlert]=useState({});\n\n  const toogle=()=>{\n    if(mode==='dark'){\n      setMode('light');\n      setText('Dark');\n      setColor('white');\n      document.body.style.color='black';\n      document.body.style.backgroundColor='white';\n      showAlert(\"Light mode is enabled \",\"success\")\n     \n    }\n    else{\n      setMode('dark');\n       setText('Light');\n       setColor('black');\n       document.body.style.color='white';\n       document.body.style.backgroundColor='black';\n       showAlert(\"Dark mode is enabled \",\"warning\")\n       \n    }\n  }\n\nconst showAlert=(message,type)=>{\n  setAlert({\n    msg:message,\n    type:type\n  })\n\n  setInterval(() => {\n    setAlert(null)\n  }, 3000);\n}\n\n  return (\n    <div className=\"App\">\n    <Navbar  mode={mode} text={text} toogle={toogle} color={color}  /> \n    <Alert alert={alert} />\n    <Analyse title=\"Text Analyse App\" mode={mode} alert={showAlert} />   \n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\n\nReactDOM.render(\n \n    <App />\n,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n\n"],"sourceRoot":""}